#include <Arduino.h>
#include <Print.h>
#include <dht11.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <SoftwareSerial.h>


//MCU690614 - Infrared thermal
#define RXPIN 2 // pin used to receive from MCU90614
#define TXPIN 3 // // pin used to send to MCU90614
SoftwareSerial serial_thermal(RXPIN, TXPIN);
unsigned char Re_buf[11],counter=0;
unsigned char sign=0;
float TO=0,TA=0;



void setup() {

  //Serial setup for thermal
  pinMode(RXPIN, INPUT);
  pinMode(TXPIN, OUTPUT);

  Serial.begin(9600);
  Serial.print("Data frame is being sent");
  delay(100);

  serial_thermal.begin(9600);
  serial_thermal.write(0XA5);
  serial_thermal.write(0X45);
  serial_thermal.write(0XEA);
  Serial.print("Data frame sent");
  delay(1000);

}


// the loop function runs over and over again forever
void loop() {

  unsigned char i=0,sum=0;

  Serial.print("serial_thermal.available: ");
  Serial.println(serial_thermal.available());
  delay(10);

  Serial.print("sign: "); Serial.println(sign);
  delay(10);

  if (sign > 0) delay(10000);

  while (serial_thermal.available()>0) {
    Re_buf[counter]=(unsigned char)serial_thermal.read();
    Serial.print("Re_buf[counter]: "); Serial.println(Re_buf[counter]);

    Serial.print("counter==0&&Re_buf[0]: "); Serial.println(counter==0&&Re_buf[0]);
    if(counter==0&&Re_buf[0]!=0x5A) return;      // Check frame header
    Serial.print("counter==0&&Re_buf[0]: "); Serial.println(counter==0&&Re_buf[0]);
    counter++;
    if(counter==9)                //Received data
    {
       counter=0;                 //Reassignment, prepare for the next frame of data reception
       sign=1;
    }
  }


  if(sign)
  {
    Serial.println("**************in sign*************");
     sign=0;
     for(i=0;i<8;i++)
      sum+=Re_buf[i];
     if(sum==Re_buf[i] )        //Check frame header, frame tail
     {
           TO=(float)(Re_buf[4]<<8|Re_buf[5])/100;
           Serial.print("TO:");
           Serial.println(TO);
           TA=(float)(Re_buf[6]<<8|Re_buf[7])/100;
           Serial.print("TA:");
           Serial.println(TA);
   }
  }



/*
  if (serial_thermal.available()>0){
    char c = serial_thermal.read();
    Serial.println(c);
    delay(1);
  }
*/

}
