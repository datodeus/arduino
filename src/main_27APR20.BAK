#include <Arduino.h>
#include <Print.h>
#include <dht11.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <SoftwareSerial.h>



#define DHT11PIN  7
#define BUTTONPIN 8

//dht11 DHT11;
LiquidCrystal_I2C lcd(0x27,20,4);

//MCU690614 - Infrared thermal
#define RXPIN 2 // pin used to receive from MCU90614
#define TXPIN 3 // // pin used to send to MCU90614
SoftwareSerial serial_thermal(RXPIN, TXPIN);
unsigned char Re_buf[11],counter=0;
unsigned char sign=0;
float TO=0,TA=0;



void setup() {

  // Serial port setup
  //Serial.begin(9600);

  //LCD setup
  LiquidCrystal_I2C lcd(0x27,16,2);
  lcd.init();

  //PUSH SWITCH setup
  pinMode(BUTTONPIN, INPUT);

  //Serial setup for thermal
  pinMode(RXPIN, INPUT);
  pinMode(TXPIN, OUTPUT);
  serial_thermal.begin(115200);
  delay(10);
  serial_thermal.write(0XA5);
  serial_thermal.write(0X45);
  serial_thermal.write(0XEA);

}

void test_lcd(bool DEBUG){
  LiquidCrystal_I2C lcd(0x27,20,4);
  lcd.backlight();

  if (DEBUG == true){
    lcd.setCursor(0,0);
    lcd.print("LINE1:0123456789");
    lcd.setCursor(0,1);
    lcd.print("LINE2:9876543210");
    lcd.blink();
    lcd.cursor();
    delay (50000);

  }
  else{
    lcd.setCursor(0,0);
    lcd.print("TESTING...");
    delay(1000);
    lcd.setCursor(0,0);
    lcd.print("LINE1:0123456789");
    lcd.setCursor(0,1);
    lcd.print("LINE2:9876543210");
    delay(3000);
    lcd.clear();

  }
}


bool test_DHT11(bool DEBUG){
  dht11 DHT11;

  int chk = DHT11.read(DHT11PIN);

  Serial.begin(9600);
  if (DEBUG == true){

    Serial.println("\n");
    Serial.println("===================");
    Serial.println("DHT11 TEST PROGRAM ");
    Serial.print("LIBRARY VERSION: ");
    Serial.println(DHT11LIB_VERSION);
    Serial.print("Read sensor: ");
    switch (chk){
      case DHTLIB_OK:
        Serial.println("OK");
        Serial.print("Humidity (%RH): ");
        Serial.println(DHT11.humidity);
        Serial.print("Temperature (°C): ");
        Serial.println(DHT11.temperature);
        break;

        case DHTLIB_ERROR_CHECKSUM:
          Serial.println("Checksum error");
          break;

        case DHTLIB_ERROR_TIMEOUT:
          Serial.println("Time out error");
          break;

        default:
        Serial.println("Unknown error");
        break;
      }
    delay(10000);
    }
  else{
    if (chk == 0){
      Serial.println("\n");
      Serial.println("===================");
      Serial.print("Humidity (RH%): ");
      Serial.println(DHT11.humidity);
      Serial.print("Temperature (°C): ");
      Serial.println(DHT11.temperature);
      delay (10000);
      return true;
    }
    else{
      return false;}
  }
}




// the loop function runs over and over again forever
void loop() {

  Serial.begin(115200);
  Serial.println("IN LOOP");
  delay(1000);

  serial_thermal.listen();
  if (serial_thermal.available()>0){
    char c = serial_thermal.read();
    Serial.println(c);
    delay(1);
  }

/*========
  unsigned char i=0,sum=0;
  Serial.print("sign_loop: "); Serial.println(sign);
  delay(1000);

  if(sign){
    sign=0;
    for(i=0;i<8;i++)
      sum+=Re_buf[i];
      Serial.print("sum: "); Serial.println(sum);
      if(sum==Re_buf[i]){
        TO=(float)(Re_buf[4]<<8|Re_buf[5])/100;
        Serial.print("TO:");
        Serial.println(TO);
        TA=(float)(Re_buf[6]<<8|Re_buf[7])/100;
        Serial.print("TA:");
        Serial.println(TA);
      }
    }

    Serial.print("serial_thermal.available(): ");
    Serial.println(serial_thermal.available());
    delay(10000);

    while (serial_thermal.available()) {
      Re_buf[counter]=(unsigned char)serial_thermal.read();
      if(counter==0&&Re_buf[0]!=0x5A) return;
      counter++;
      if(counter==9)
      {
         counter=0;
         sign=1;
      }
    }
===========================*/



/*
  //DHT11 + PUSHBUTTON + LCD MODULE
  LiquidCrystal_I2C lcd(0x27,20,4);
  bool DEBUG = false;


  test_lcd(DEBUG);

  int buttonState = 0;

  dht11 DHT11;
  int humid=0, temp=0;

  lcd.backlight();

  while (true) {
    humid =0, temp = 0;

    if (DEBUG == true){
      Serial.begin(9600);
      Serial.print("Humid: "); Serial.print(humid);
      Serial.print(", Temperature: "); Serial.println(temp);
      delay(1000);
    }

    buttonState = digitalRead(BUTTONPIN);

    if (buttonState == 1) {
      lcd.backlight();
      delay(100);

      DHT11.read(DHT11PIN);
      humid = DHT11.humidity;
      temp = DHT11.temperature;
      delay(10);

      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("HUMIDITY: ");
      lcd.print(humid);
      lcd.setCursor(0,1);
      lcd.print("TEMPERATURE: ");
      lcd.print(temp);
      delay(20000);
      lcd.clear();
    }
    else{

      //lcd.setCursor(0,0);
      //lcd.print("READY");
      //delay(100);
      lcd.noBacklight();
    }
  }
*/

}
